{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "IUX API USERS",
      "description": " API CRUD de Usuarios",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      }
    },
    "host": "localhost:8080",
    "basePath": "/api/",
    "tags": [
      {
        "name": "Api:Users",
        "description": "API para el manejo de operaciones con usuarios"
      }
    ],
    "schemes": [
      "http"
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
      "/users": {

        "post": {
          "tags": [
            "Users"
          ],
          "summary": "Create new Users in system",
          "description": "Create an Users in system  ",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "Description": "Authorization",
              "schema": {
              "type":"String",
              "format":"String",
              "required":true
              }
            },
            {
              "name": "Users",
              "in": "body",
              "Description": "User that we want to create",
              "schema": {
              "$ref": "#/definitions/Users"
              }
            }
           
          ],
  
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "New user is created",
              "schema": {
                "$ref": "#/definitions/Users"
              }
            }
          }
        },

        "get": {
          "tags": [
            "Users"
          ],
          "description":"Get an list of Users  record in system",
          "summary": "Get all Users  record in system",
          "parameters": [
           
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization",
              "schema": {
              "type":"String",
              "format":"String",
              "required":true
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Users"
              }
            }
          }
        }
      },
      "/users/{users_id}": {

        "get": {
          "tags": [
            "Users"
          ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization",
            "schema": {
            "type":"String",
            "format":"String",
            "required":true
            }
          },
          {
            "name": "users_id",
            "in": "path",
            "description": "ID of Users that we want to find",
            "schema": {
            "type":"String",
            "required":true
          }
        
          }

          
        ],
        "description":"Get Users  given ID",
          "summary": "Get Users with  ID",
          "responses": {
            "200": {
              "description": "User is found",
              "schema": {
                "$ref": "#/definitions/Users"
              }
            }
          }
        },
        
        "put": {
          "description":"Update user  give ID",
          "summary": "Update user with give ID",
          "tags": [
            "Users"
          ],
          "parameters": [
          
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization",
              "schema": {
              "type":"String",
              "format":"String",
              "required":true
              } },  {
                "name": "users_id",
                "in": "path",
                "description": "ID of Users that we want to find",
                "schema": {
                "type":"String",
                "required":true
              }
            
              },
            {
              "name": "user",
              "in": "body",
              "description": "User with new values of properties",
              "schema": {
                "$ref": "#/definitions/Users"
              }
            }
     
          ],
          "responses": {
            "200": {
              "description": "User is updated",
              "schema": {
                "$ref": "#/definitions/Users"
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Users"
          ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization",
            "schema": {
            "type":"String",
            "format":"String",
            "required":true
            }
          },
          {
            "name": "users_id",
            "in": "path",
            "description": "ID of Users that we want to find",
            "schema": {
            "type":"String",
            "required":true
          }
        
          }
        ],
          "description":"Delete User  given ID",
          "summary": "Delete User with given ID",
          "responses": {
            "200": {
              "description": "User is deleted",
              "schema": {
                "$ref": "#/definitions/Users"
              }
            }
          }
        }
        
   
        
      }
    },
    "definitions": {
      "Users": {
        "required": [
          "NameUser",
          "LastNameUser",
          "EmailUser",
          "PasswordUser",
          "StatusUser",     
          "DateBeginUser",
          "TypeUser"
        ],
        "properties": {
          "_id": {
            "type": "string"
           
          },
          "NameUser": {
            "type": "string"
           
          },
          "LastNameUser": {
            "type": "string"
        
          },
          "EmailUser": {
            "type": "string"
    
          },
          "StatusUser": {
            "type": "boolean"
          
          },
          "DateBeginUser": {
            "type": "string"
         
          },

      
          "TypeUser": {
            "type":"object",
          
            "IdType": {
                "type": "String"
              
            },
            "Role": {
                "type": "String"
              
            },
            "DescripTypeUser": {
                "type": "String"
                
            }
        }

        }
      }
    }
  }